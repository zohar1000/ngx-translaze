{"version":3,"file":"base-translaze.service.d.ts","sources":["base-translaze.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, Injector, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { TranslazeConfig } from '../models/config/translaze-config.model';\r\nimport { TranslazeFeatureConfig } from '../models/config/translaze-feature-config.model';\r\nexport declare abstract class BaseTranslazeService implements OnDestroy {\r\n    protected config: TranslazeConfig | TranslazeFeatureConfig;\r\n    protected langs: {};\r\n    protected injector: Injector;\r\n    protected componentFactoryResolver: ComponentFactoryResolver;\r\n    protected subs: Subscription[];\r\n    private isReplaceAllEnabled;\r\n    appText$: BehaviorSubject<unknown>;\r\n    constructor(componentFactoryResolver: ComponentFactoryResolver, config: TranslazeConfig | TranslazeFeatureConfig);\r\n    protected abstract getInitialLangCode(): any;\r\n    abstract getConfig(): any;\r\n    init(): void;\r\n    changeLang(langCode: any): void;\r\n    private setLang;\r\n    protected onNewLangReady(langCode: any): void;\r\n    private lazyLoadLang;\r\n    /*******************************/\r\n    /*******************************/\r\n    translate(str: any, params?: any): any;\r\n    /*****************************************/\r\n    /*****************************************/\r\n    private loadLang;\r\n    /***************************************************/\r\n    /***************************************************/\r\n    private complementLang;\r\n    private complementNode;\r\n    private deleteEmptyKeys;\r\n    private regSub;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}