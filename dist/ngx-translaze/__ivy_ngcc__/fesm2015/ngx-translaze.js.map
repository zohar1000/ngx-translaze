{"version":3,"file":"ngx-translaze.js","sources":["../../../projects/ngx-translaze/src/lib/tokens/translaze-config.token.ts","../../../projects/ngx-translaze/src/lib/services/base-translaze.service.ts","../../../projects/ngx-translaze/src/lib/enums/translaze-lang-status.enum.ts","../../../projects/ngx-translaze/src/lib/services/translaze.service.ts","../../../projects/ngx-translaze/src/lib/pipes/translaze.pipe.ts","../../../projects/ngx-translaze/src/lib/translaze.const.ts","../../../projects/ngx-translaze/src/lib/tokens/translaze-feature-config.token.ts","../../../projects/ngx-translaze/src/lib/services/translaze-feature.service.ts","../../../projects/ngx-translaze/src/lib/translaze-root.module.ts","../../../projects/ngx-translaze/src/lib/translaze-feature.module.ts","../../../projects/ngx-translaze/src/public-api.ts","../../../projects/ngx-translaze/src/ngx-translaze.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const TRANSLAZE_CONFIG = new InjectionToken('TRANSLAZE_CONFIG');\r\n","import { ComponentFactoryResolver, ComponentRef, Inject, Injectable, Injector, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { TranslazeConfig } from '../models/config/translaze-config.model';\r\nimport { TranslazeFeatureConfig } from '../models/config/translaze-feature-config.model';\r\n\r\n@Injectable()\r\nexport abstract class BaseTranslazeService implements OnDestroy {\r\n  protected config: TranslazeConfig | TranslazeFeatureConfig;\r\n  protected langs = {};\r\n  protected injector: Injector = Injector.create({ providers: [] });\r\n  protected componentFactoryResolver: ComponentFactoryResolver;\r\n  protected subs: Subscription[] = [];\r\n  private isReplaceAllEnabled = Boolean('a'['replaceAll']);\r\n  // text$: BehaviorSubject<any> = new BehaviorSubject<unknown>('');\r\n  // isText$ = new BehaviorSubject(false);\r\n  appText$: BehaviorSubject<unknown>;\r\n\r\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\r\n              config: TranslazeConfig | TranslazeFeatureConfig) {\r\n    this.componentFactoryResolver = componentFactoryResolver;\r\n    this.config = config;\r\n    setTimeout(() => this.init());\r\n  }\r\n\r\n  protected abstract getInitialLangCode();\r\n  public abstract getConfig();\r\n\r\n  init() {\r\n    this.changeLang(this.getInitialLangCode());\r\n  }\r\n\r\n  public changeLang(langCode) {\r\n    this.setLang(langCode).then();\r\n  }\r\n\r\n  private async setLang(langCode) {\r\n    if (!this.langs[langCode]) await this.lazyLoadLang(langCode);\r\n    if (this.langs[langCode]) this.onNewLangReady(langCode);\r\n  }\r\n\r\n  protected onNewLangReady(langCode) {\r\n    if (this.config.onLangTextReady) this.config.onLangTextReady(this.langs[langCode]);\r\n  }\r\n\r\n  private async lazyLoadLang(langCode) {\r\n    const langItem = this.config.langs.find(item => item.code === langCode);\r\n    try {\r\n      if (langItem.complementBy) {\r\n        const results = await Promise.all([await this.loadLang(langCode), await this.loadLang(langItem.complementBy)]);\r\n        this.langs[langCode] = results[0];\r\n        this.langs[langItem.complementBy] = results[1];\r\n        this.complementLang(langCode, langItem.complementBy);\r\n      } else {\r\n        this.langs[langCode] = await this.loadLang(langCode);\r\n      }\r\n    } catch (e) {\r\n      if (this.config.onLoadError) this.config.onLoadError(langCode, this.config, e);\r\n      console.error('Error loading language file, language:', langCode, ', config:', this.config, ', error:', e);\r\n    }\r\n  }\r\n\r\n\r\n  /*******************************/\r\n  /*      T R A N S L A T E      */\r\n  /*******************************/\r\n\r\n  public translate(str, params?) {\r\n    if (!str) return '';\r\n    if (!params) return str;\r\n    const keys = Object.keys(params);\r\n    for (let i = 0, len = keys.length; i < len && str !== undefined; i++) {\r\n      const key = keys[i];\r\n      if (this.isReplaceAllEnabled) {\r\n        str = str.replaceAll('{' + key + '}', params[key]);\r\n      } else {\r\n        const regExp = new RegExp('{' + key + '}', 'g');\r\n        str = str.replace(regExp, params[key]);\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  /*****************************************/\r\n  /*      L O A D   L A N G   F I L E      */\r\n  /*****************************************/\r\n\r\n  private async loadLang(langCode) {\r\n    // alt code for lazy loading that was taken from a lecture, needs to check if better\r\n    // https://www.youtube.com/watch?v=e2DHWkP2ggc\r\n    // https://blog.profanis.me/blog/lazy-load-angular-components-in-a-hoc\r\n    // componentType = 'lazy' | 'lazy1';\r\n    // const lazyContentComponent = await import(`../${this.componentType}.content/${this.componentType}.content.\r\n    // const componentClassName = lazyContentComponent[`${this.titleCasePipe.transform(this.componentType)}Conten\r\n    // const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClassName);\r\n    // can also use *ngComponentOutlet with the class name\r\n\r\n    const file: any = await this.config.loadLang(langCode);\r\n    const className: any = Object.keys(file)[0];\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(file[className]);\r\n    const inst: ComponentRef<any> = componentFactory.create(this.injector);\r\n    return inst.instance.text;\r\n  }\r\n\r\n\r\n  /***************************************************/\r\n  /*      C O M L E M E N T   L A N G   F I L E      */\r\n  /***************************************************/\r\n\r\n  private complementLang(langCode, compByLangCode) {\r\n    this.complementNode(this.langs[langCode], this.langs[compByLangCode]);\r\n  }\r\n\r\n  private complementNode(target, source) {\r\n    const keys = Object.keys(source);\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      const key = keys[i];\r\n      if (target[key] === undefined) {\r\n        if (typeof source[key] === 'object') {\r\n          target[key] = {};\r\n          this.complementNode(target[key], source[key]);\r\n        } else {\r\n          target[key] = source[key];\r\n        }\r\n      } else {\r\n        if (typeof target[key] === 'object') {\r\n          this.complementNode(target[key], source[key]);\r\n        } else if (!target[key]) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private deleteEmptyKeys(node) {\r\n    const keys = Object.keys(node);\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      const key = keys[i];\r\n      if (typeof node[key] === 'object') {\r\n        this.deleteEmptyKeys(node[key]);\r\n      } else if (node[key] === '') {\r\n        delete node[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  private regSub(sub: Subscription) {\r\n    this.subs.push(sub);\r\n  }\r\n\r\n  ngOnDestroy() {\r\nconsole.log('onDestroy service, subs:', this.subs.length);\r\n    this.subs.forEach(sub => { if (!sub.closed) sub.unsubscribe(); });\r\n  }\r\n}\r\n","export enum TranslazeLangStatus {\r\n  Start = 1,\r\n  Complete = 2\r\n}\r\n","import { ComponentFactoryResolver, Inject, Injectable } from '@angular/core';\nimport { TranslazeLocalStorage } from '../models/translaze-local-storage.model';\nimport { TranslazeConfig } from '../models/config/translaze-config.model';\nimport { TRANSLAZE_CONFIG } from '../tokens/translaze-config.token';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport { BaseTranslazeService } from './base-translaze.service';\nimport { TranslazeInfo } from '../models/info/translaze-info.model';\nimport { TranslazeLang } from '../models/translaze-lang.model';\nimport { TranslazeLangStatus } from '../enums/translaze-lang-status.enum';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslazeService extends BaseTranslazeService {\n  readonly FALLBACK_LANG = 'en';\n  readonly DEFAULT_USE_BROWSER_DEFAULT_LANG = true;\n  readonly DEFAULT_LOCAL_STORAGE_KEY = 'translaze';\n  private langCode = '';\n  private langName = '';\n  text$: BehaviorSubject<unknown> = new BehaviorSubject<unknown>('');\n  lang$: ReplaySubject<TranslazeLang> = new ReplaySubject<TranslazeLang>(1);\n  isText$ = new BehaviorSubject(false);\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\n              @Inject(TRANSLAZE_CONFIG) config: TranslazeConfig) {\n    super(componentFactoryResolver, config);\n    this.appText$ = this.text$;\n  }\n\n  public changeLang(langCode) {\n    this.lang$.next({ status: TranslazeLangStatus.Start, langCode, prevLangCode: this.langCode });\n    super.changeLang(langCode);\n  }\n\n  protected onNewLangReady(langCode) {\n    super.onNewLangReady(langCode);\n    this.langCode = langCode;\n    this.langName = this.getConfig().langs.find(item => item.code === this.langCode).name;\n    this.updateLocalStorage(langCode);\n    if (this.config.onLangTextReady) this.config.onLangTextReady(this.langs[langCode]);\n    this.lang$.next({ status: TranslazeLangStatus.Complete, langCode });\n    (this.text$ as BehaviorSubject<unknown>).next(this.langs[langCode]);\n    this.isText$.next(true);\n  }\n\n  private updateLocalStorage(langCode) {\n    const lsItem: TranslazeLocalStorage = { langCode };\n    const localStorageKey = this.getConfig().localStorageKey || this.DEFAULT_LOCAL_STORAGE_KEY;\n    localStorage.setItem(localStorageKey, JSON.stringify(lsItem));\n  }\n\n  public getConfig(): TranslazeConfig {\n    return this.config as TranslazeConfig;\n  }\n\n  protected getInitialLangCode() {\n    const lsStr = localStorage.getItem(this.getConfig().localStorageKey);\n    let langCode;\n    if (lsStr) {\n      const lsItem: TranslazeLocalStorage = JSON.parse(lsStr);\n      langCode = lsItem.langCode;\n    } else {\n      let langItem;\n      let isUseBrowserDefaultLang = this.getConfig().isUseBrowserDefaultLang;\n      if (isUseBrowserDefaultLang === undefined ) isUseBrowserDefaultLang = this.DEFAULT_USE_BROWSER_DEFAULT_LANG;\n      if (isUseBrowserDefaultLang && navigator) {\n        langCode = navigator.language;\n        langItem = this.config.langs.find(item => item.code.toLowerCase() === langCode.toLowerCase());\n        if (!langItem) {\n          langCode = langCode.substr(0, 2);\n          langItem = this.config.langs.find(item => item.code.toLowerCase() === langCode.toLowerCase());\n        }\n        if (!langItem) langCode = '';\n      }\n      if (!langCode) {\n        langItem = (this.config as TranslazeConfig).langs.find(item => item.default);\n        if (langItem) langCode = langItem.code;\n      }\n      if (!langCode) langCode = this.FALLBACK_LANG;\n    }\n    return langCode;\n  }\n\n  public getInfo(): TranslazeInfo {\n    return {\n      config: this.getConfig(),\n      langCode: this.langCode,\n      langName: this.langName\n    };\n  }\n\n  /***************************/\n  /*      F E A T U R E      */\n  /***************************/\n/*\n  setFeatureModule(config: TranslazeFeatureConfig) {\n    console.log('setFeatureModule:', config);\n    if (!config.featureId) {\n      console.error('A feature language was configured but it has no \"featureId\" property, the language file for this module will not be loaded. config:', config);\n    }\n    // if (this.featureModules[config.featureId])\n  }*/\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslazeService } from '../services/translaze.service';\n\n@Pipe({ name: 'translaze' })\nexport class TranslazePipe implements PipeTransform {\n  constructor(private translazeService: TranslazeService) {}\n\n  transform(str: unknown, args: unknown): unknown {\n    return this.translazeService.translate(str, args);\n  }\n}\n","const isReplaceAllEnabled = Boolean('a'['replaceAll']);\r\n\r\nexport const translaze = (value, params?) => {\r\n  if (!params) return value;\r\n  const keys = Object.keys(params);\r\n  for (let i = 0, len = keys.length; i < len && value !== undefined; i++) {\r\n    const key = keys[i];\r\n    if (isReplaceAllEnabled) {\r\n      value = value.replaceAll('{' + keys[i] + '}', params[key]);\r\n    } else {\r\n      const regExp = new RegExp('{' + keys[i] + '}', 'g');\r\n      value = value.replace(regExp, params[key]);\r\n    }\r\n  }\r\n  return value;\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const TRANSLAZE_FEATURE_CONFIG = new InjectionToken('TRANSLAZE_FEATURE_CONFIG');\r\n","import { ComponentFactoryResolver, Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslazeFeatureConfig } from '../models/config/translaze-feature-config.model';\nimport { TRANSLAZE_FEATURE_CONFIG } from '../tokens/translaze-feature-config.token';\nimport { TranslazeService } from './translaze.service';\nimport { BaseTranslazeService } from './base-translaze.service';\n\n@Injectable()\nexport class TranslazeFeatureService extends BaseTranslazeService {\n  featureText$: BehaviorSubject<any> = new BehaviorSubject<unknown>('');\n  isFeatureText$ = new BehaviorSubject(false);\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\n              @Inject(TRANSLAZE_FEATURE_CONFIG) config: TranslazeFeatureConfig,\n              private translazeService: TranslazeService) {\n    super(componentFactoryResolver, config);\n    this.appText$ = this.translazeService.text$;\n  }\n\n  protected onNewLangReady(langCode) {\n    super.onNewLangReady(langCode);\n    this.featureText$.next(this.langs[langCode]);\n    this.isFeatureText$.next(true);\n  }\n\n  getConfig(): TranslazeFeatureConfig {\n    return this.config as TranslazeFeatureConfig;\n  }\n\n  getInitialLangCode() {\n    return this.translazeService.getInfo().langCode;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslazeConfig } from './models/config/translaze-config.model';\nimport { TRANSLAZE_CONFIG } from './tokens/translaze-config.token';\n\n@NgModule({})\nexport class TranslazeRootModule {\n  static forRoot(config: TranslazeConfig): ModuleWithProviders<TranslazeRootModule> {\n    return {\n      ngModule: TranslazeRootModule,\n      providers: [{ provide: TRANSLAZE_CONFIG, useValue: config }]\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslazePipe } from './pipes/translaze.pipe';\nimport { TranslazeFeatureConfig } from './models/config/translaze-feature-config.model';\nimport { TRANSLAZE_FEATURE_CONFIG } from './tokens/translaze-feature-config.token';\nimport { TranslazeService } from './services/translaze.service';\n\n@NgModule({\n  declarations: [TranslazePipe],\n  exports: [TranslazePipe]\n})\nexport class TranslazeFeatureModule {\n  // static translazeService: TranslazeService;\n  // id = -1;\n  //\n  // constructor(translazeService: TranslazeService) {\n  //   if (this.id === -1) this.id = Math.floor(Math.random() * 1000) + 1;\n  //   console.log('TranslazeFeatureModule id:', this.id);\n  //   TranslazeFeatureModule.translazeService = translazeService;\n  // }\n  //\n  // static forChild(config: TranslazeFeatureConfig): ModuleWithProviders<TranslazeFeatureModule> {\n  //   TranslazeFeatureModule.translazeService.setFeatureModule(config);\n  //\n  //   return {\n  //     ngModule: TranslazeFeatureModule,\n  //     providers: [{ provide: TRANSLAZE_FEATURE_CONFIG, useValue: config }]\n  //   };\n  // }\n}\n","/*\n * Public API Surface of ngx-translaze\n */\n\nexport { TranslazePipe } from './lib/pipes/translaze.pipe';\nexport { TranslazeConfig } from './lib/models/config/translaze-config.model';\nexport { TranslazeFeatureConfig } from './lib/models/config/translaze-feature-config.model';\nexport { TranslazeLocalStorage } from './lib/models/translaze-local-storage.model';\nexport { TranslazeOnText } from './lib/models/translaze-on-text.model';\nexport { translaze } from './lib/translaze.const';\nexport { TranslazeService } from './lib/services/translaze.service';\nexport { TranslazeFeatureService } from './lib/services/translaze-feature.service';\nexport { TranslazeRootModule } from './lib/translaze-root.module';\nexport { TranslazeFeatureModule } from './lib/translaze-feature.module';\nexport { TRANSLAZE_FEATURE_CONFIG } from './lib/tokens/translaze-feature-config.token';\nexport { TranslazeInfo } from './lib/models/info/translaze-info.model';\nexport { TranslazeLang } from './lib/models/translaze-lang.model';\nexport { TranslazeLangStatus } from './lib/enums/translaze-lang-status.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseTranslazeService as ɵa} from './lib/services/base-translaze.service';\nexport {TRANSLAZE_CONFIG as ɵb} from './lib/tokens/translaze-config.token';"]}