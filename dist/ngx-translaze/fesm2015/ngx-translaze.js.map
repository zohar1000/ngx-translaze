{"version":3,"file":"ngx-translaze.js","sources":["../../../projects/ngx-translaze/src/lib/tokens/translaze-config.token.ts","../../../projects/ngx-translaze/src/lib/services/base-translaze.service.ts","../../../projects/ngx-translaze/src/lib/enums/translaze-lang-status.enum.ts","../../../projects/ngx-translaze/src/lib/services/translaze.service.ts","../../../projects/ngx-translaze/src/lib/pipes/translaze.pipe.ts","../../../projects/ngx-translaze/src/lib/translaze.const.ts","../../../projects/ngx-translaze/src/lib/tokens/translaze-feature-config.token.ts","../../../projects/ngx-translaze/src/lib/services/translaze-feature.service.ts","../../../projects/ngx-translaze/src/lib/translaze-root.module.ts","../../../projects/ngx-translaze/src/lib/translaze-feature.module.ts","../../../projects/ngx-translaze/src/public-api.ts","../../../projects/ngx-translaze/src/ngx-translaze.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const TRANSLAZE_CONFIG = new InjectionToken('TRANSLAZE_CONFIG');\r\n","import { ComponentFactoryResolver, ComponentRef, Inject, Injectable, Injector, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { TranslazeConfig } from '../models/config/translaze-config.model';\r\nimport { TranslazeFeatureConfig } from '../models/config/translaze-feature-config.model';\r\n\r\n@Injectable()\r\nexport abstract class BaseTranslazeService implements OnDestroy {\r\n  protected config: TranslazeConfig | TranslazeFeatureConfig;\r\n  protected langs = {};\r\n  protected injector: Injector = Injector.create({ providers: [] });\r\n  protected componentFactoryResolver: ComponentFactoryResolver;\r\n  protected subs: Subscription[] = [];\r\n  private isReplaceAllEnabled = Boolean('a'['replaceAll']);\r\n  // text$: BehaviorSubject<any> = new BehaviorSubject<unknown>('');\r\n  // isText$ = new BehaviorSubject(false);\r\n  appText$: BehaviorSubject<unknown>;\r\n\r\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\r\n              config: TranslazeConfig | TranslazeFeatureConfig) {\r\n    this.componentFactoryResolver = componentFactoryResolver;\r\n    this.config = config;\r\n    setTimeout(() => this.init());\r\n  }\r\n\r\n  protected abstract getInitialLangCode();\r\n  public abstract getConfig();\r\n\r\n  init() {\r\n    this.changeLang(this.getInitialLangCode());\r\n  }\r\n\r\n  public changeLang(langCode) {\r\n    this.setLang(langCode).then();\r\n  }\r\n\r\n  private async setLang(langCode) {\r\n    if (!this.langs[langCode]) await this.lazyLoadLang(langCode);\r\n    if (this.langs[langCode]) this.onNewLangReady(langCode);\r\n  }\r\n\r\n  protected onNewLangReady(langCode) {\r\n    if (this.config.onLangTextReady) this.config.onLangTextReady(this.langs[langCode]);\r\n  }\r\n\r\n  private async lazyLoadLang(langCode) {\r\n    const langItem = this.config.langs.find(item => item.code === langCode);\r\n    try {\r\n      if (langItem.complementBy) {\r\n        const results = await Promise.all([await this.loadLang(langCode), await this.loadLang(langItem.complementBy)]);\r\n        this.langs[langCode] = results[0];\r\n        this.langs[langItem.complementBy] = results[1];\r\n        this.complementLang(langCode, langItem.complementBy);\r\n      } else {\r\n        this.langs[langCode] = await this.loadLang(langCode);\r\n      }\r\n    } catch (e) {\r\n      if (this.config.onLoadError) this.config.onLoadError(langCode, this.config, e);\r\n      console.error('Error loading language file, language:', langCode, ', config:', this.config, ', error:', e);\r\n    }\r\n  }\r\n\r\n\r\n  /*******************************/\r\n  /*      T R A N S L A T E      */\r\n  /*******************************/\r\n\r\n  public translate(str, params?) {\r\n    if (!str) return '';\r\n    if (!params) return str;\r\n    const keys = Object.keys(params);\r\n    for (let i = 0, len = keys.length; i < len && str !== undefined; i++) {\r\n      const key = keys[i];\r\n      if (this.isReplaceAllEnabled) {\r\n        str = str.replaceAll('{' + key + '}', params[key]);\r\n      } else {\r\n        const regExp = new RegExp('{' + key + '}', 'g');\r\n        str = str.replace(regExp, params[key]);\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  /*****************************************/\r\n  /*      L O A D   L A N G   F I L E      */\r\n  /*****************************************/\r\n\r\n  private async loadLang(langCode) {\r\n    // alt code for lazy loading that was taken from a lecture, needs to check if better\r\n    // https://www.youtube.com/watch?v=e2DHWkP2ggc\r\n    // https://blog.profanis.me/blog/lazy-load-angular-components-in-a-hoc\r\n    // componentType = 'lazy' | 'lazy1';\r\n    // const lazyContentComponent = await import(`../${this.componentType}.content/${this.componentType}.content.\r\n    // const componentClassName = lazyContentComponent[`${this.titleCasePipe.transform(this.componentType)}Conten\r\n    // const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClassName);\r\n    // can also use *ngComponentOutlet with the class name\r\n\r\n    const file: any = await this.config.loadLang(langCode);\r\n    const className: any = Object.keys(file)[0];\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(file[className]);\r\n    const inst: ComponentRef<any> = componentFactory.create(this.injector);\r\n    return inst.instance.text;\r\n  }\r\n\r\n\r\n  /***************************************************/\r\n  /*      C O M L E M E N T   L A N G   F I L E      */\r\n  /***************************************************/\r\n\r\n  private complementLang(langCode, compByLangCode) {\r\n    this.complementNode(this.langs[langCode], this.langs[compByLangCode]);\r\n  }\r\n\r\n  private complementNode(target, source) {\r\n    const keys = Object.keys(source);\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      const key = keys[i];\r\n      if (target[key] === undefined) {\r\n        if (typeof source[key] === 'object') {\r\n          target[key] = {};\r\n          this.complementNode(target[key], source[key]);\r\n        } else {\r\n          target[key] = source[key];\r\n        }\r\n      } else {\r\n        if (typeof target[key] === 'object') {\r\n          this.complementNode(target[key], source[key]);\r\n        } else if (!target[key]) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private deleteEmptyKeys(node) {\r\n    const keys = Object.keys(node);\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      const key = keys[i];\r\n      if (typeof node[key] === 'object') {\r\n        this.deleteEmptyKeys(node[key]);\r\n      } else if (node[key] === '') {\r\n        delete node[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  private regSub(sub: Subscription) {\r\n    this.subs.push(sub);\r\n  }\r\n\r\n  ngOnDestroy() {\r\nconsole.log('onDestroy service, subs:', this.subs.length);\r\n    this.subs.forEach(sub => { if (!sub.closed) sub.unsubscribe(); });\r\n  }\r\n}\r\n","export enum TranslazeLangStatus {\r\n  Start = 1,\r\n  Complete = 2\r\n}\r\n","import { ComponentFactoryResolver, Inject, Injectable } from '@angular/core';\nimport { TranslazeLocalStorage } from '../models/translaze-local-storage.model';\nimport { TranslazeConfig } from '../models/config/translaze-config.model';\nimport { TRANSLAZE_CONFIG } from '../tokens/translaze-config.token';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport { BaseTranslazeService } from './base-translaze.service';\nimport { TranslazeInfo } from '../models/info/translaze-info.model';\nimport { TranslazeLang } from '../models/translaze-lang.model';\nimport { TranslazeLangStatus } from '../enums/translaze-lang-status.enum';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslazeService extends BaseTranslazeService {\n  readonly FALLBACK_LANG = 'en';\n  readonly DEFAULT_USE_BROWSER_DEFAULT_LANG = true;\n  readonly DEFAULT_LOCAL_STORAGE_KEY = 'translaze';\n  private langCode = '';\n  private langName = '';\n  text$: BehaviorSubject<unknown> = new BehaviorSubject<unknown>('');\n  lang$: ReplaySubject<TranslazeLang> = new ReplaySubject<TranslazeLang>(1);\n  isText$ = new BehaviorSubject(false);\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\n              @Inject(TRANSLAZE_CONFIG) config: TranslazeConfig) {\n    super(componentFactoryResolver, config);\n    this.appText$ = this.text$;\n  }\n\n  public changeLang(langCode) {\n    this.lang$.next({ status: TranslazeLangStatus.Start, langCode, prevLangCode: this.langCode });\n    super.changeLang(langCode);\n  }\n\n  protected onNewLangReady(langCode) {\n    super.onNewLangReady(langCode);\n    this.langCode = langCode;\n    this.langName = this.getConfig().langs.find(item => item.code === this.langCode).name;\n    this.updateLocalStorage(langCode);\n    if (this.config.onLangTextReady) this.config.onLangTextReady(this.langs[langCode]);\n    this.lang$.next({ status: TranslazeLangStatus.Complete, langCode });\n    (this.text$ as BehaviorSubject<unknown>).next(this.langs[langCode]);\n    this.isText$.next(true);\n  }\n\n  private updateLocalStorage(langCode) {\n    const lsItem: TranslazeLocalStorage = { langCode };\n    const localStorageKey = this.getConfig().localStorageKey || this.DEFAULT_LOCAL_STORAGE_KEY;\n    localStorage.setItem(localStorageKey, JSON.stringify(lsItem));\n  }\n\n  public getConfig(): TranslazeConfig {\n    return this.config as TranslazeConfig;\n  }\n\n  protected getInitialLangCode() {\n    const lsStr = localStorage.getItem(this.getConfig().localStorageKey);\n    let langCode;\n    if (lsStr) {\n      const lsItem: TranslazeLocalStorage = JSON.parse(lsStr);\n      langCode = lsItem.langCode;\n    } else {\n      let langItem;\n      let isUseBrowserDefaultLang = this.getConfig().isUseBrowserDefaultLang;\n      if (isUseBrowserDefaultLang === undefined ) isUseBrowserDefaultLang = this.DEFAULT_USE_BROWSER_DEFAULT_LANG;\n      if (isUseBrowserDefaultLang && navigator) {\n        langCode = navigator.language;\n        langItem = this.config.langs.find(item => item.code.toLowerCase() === langCode.toLowerCase());\n        if (!langItem) {\n          langCode = langCode.substr(0, 2);\n          langItem = this.config.langs.find(item => item.code.toLowerCase() === langCode.toLowerCase());\n        }\n        if (!langItem) langCode = '';\n      }\n      if (!langCode) {\n        langItem = (this.config as TranslazeConfig).langs.find(item => item.default);\n        if (langItem) langCode = langItem.code;\n      }\n      if (!langCode) langCode = this.FALLBACK_LANG;\n    }\n    return langCode;\n  }\n\n  public getInfo(): TranslazeInfo {\n    return {\n      config: this.getConfig(),\n      langCode: this.langCode,\n      langName: this.langName\n    };\n  }\n\n  /***************************/\n  /*      F E A T U R E      */\n  /***************************/\n/*\n  setFeatureModule(config: TranslazeFeatureConfig) {\n    console.log('setFeatureModule:', config);\n    if (!config.featureId) {\n      console.error('A feature language was configured but it has no \"featureId\" property, the language file for this module will not be loaded. config:', config);\n    }\n    // if (this.featureModules[config.featureId])\n  }*/\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslazeService } from '../services/translaze.service';\n\n@Pipe({ name: 'translaze' })\nexport class TranslazePipe implements PipeTransform {\n  constructor(private translazeService: TranslazeService) {}\n\n  transform(str: unknown, args: unknown): unknown {\n    return this.translazeService.translate(str, args);\n  }\n}\n","const isReplaceAllEnabled = Boolean('a'['replaceAll']);\r\n\r\nexport const translaze = (value, params?) => {\r\n  if (!params) return value;\r\n  const keys = Object.keys(params);\r\n  for (let i = 0, len = keys.length; i < len && value !== undefined; i++) {\r\n    const key = keys[i];\r\n    if (isReplaceAllEnabled) {\r\n      value = value.replaceAll('{' + keys[i] + '}', params[key]);\r\n    } else {\r\n      const regExp = new RegExp('{' + keys[i] + '}', 'g');\r\n      value = value.replace(regExp, params[key]);\r\n    }\r\n  }\r\n  return value;\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const TRANSLAZE_FEATURE_CONFIG = new InjectionToken('TRANSLAZE_FEATURE_CONFIG');\r\n","import { ComponentFactoryResolver, Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslazeFeatureConfig } from '../models/config/translaze-feature-config.model';\nimport { TRANSLAZE_FEATURE_CONFIG } from '../tokens/translaze-feature-config.token';\nimport { TranslazeService } from './translaze.service';\nimport { BaseTranslazeService } from './base-translaze.service';\n\n@Injectable()\nexport class TranslazeFeatureService extends BaseTranslazeService {\n  featureText$: BehaviorSubject<any> = new BehaviorSubject<unknown>('');\n  isFeatureText$ = new BehaviorSubject(false);\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver,\n              @Inject(TRANSLAZE_FEATURE_CONFIG) config: TranslazeFeatureConfig,\n              private translazeService: TranslazeService) {\n    super(componentFactoryResolver, config);\n    this.appText$ = this.translazeService.text$;\n  }\n\n  protected onNewLangReady(langCode) {\n    super.onNewLangReady(langCode);\n    this.featureText$.next(this.langs[langCode]);\n    this.isFeatureText$.next(true);\n  }\n\n  getConfig(): TranslazeFeatureConfig {\n    return this.config as TranslazeFeatureConfig;\n  }\n\n  getInitialLangCode() {\n    return this.translazeService.getInfo().langCode;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslazeConfig } from './models/config/translaze-config.model';\nimport { TRANSLAZE_CONFIG } from './tokens/translaze-config.token';\n\n@NgModule({})\nexport class TranslazeRootModule {\n  static forRoot(config: TranslazeConfig): ModuleWithProviders<TranslazeRootModule> {\n    return {\n      ngModule: TranslazeRootModule,\n      providers: [{ provide: TRANSLAZE_CONFIG, useValue: config }]\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslazePipe } from './pipes/translaze.pipe';\nimport { TranslazeFeatureConfig } from './models/config/translaze-feature-config.model';\nimport { TRANSLAZE_FEATURE_CONFIG } from './tokens/translaze-feature-config.token';\nimport { TranslazeService } from './services/translaze.service';\n\n@NgModule({\n  declarations: [TranslazePipe],\n  exports: [TranslazePipe]\n})\nexport class TranslazeFeatureModule {\n  // static translazeService: TranslazeService;\n  // id = -1;\n  //\n  // constructor(translazeService: TranslazeService) {\n  //   if (this.id === -1) this.id = Math.floor(Math.random() * 1000) + 1;\n  //   console.log('TranslazeFeatureModule id:', this.id);\n  //   TranslazeFeatureModule.translazeService = translazeService;\n  // }\n  //\n  // static forChild(config: TranslazeFeatureConfig): ModuleWithProviders<TranslazeFeatureModule> {\n  //   TranslazeFeatureModule.translazeService.setFeatureModule(config);\n  //\n  //   return {\n  //     ngModule: TranslazeFeatureModule,\n  //     providers: [{ provide: TRANSLAZE_FEATURE_CONFIG, useValue: config }]\n  //   };\n  // }\n}\n","/*\n * Public API Surface of ngx-translaze\n */\n\nexport { TranslazePipe } from './lib/pipes/translaze.pipe';\nexport { TranslazeConfig } from './lib/models/config/translaze-config.model';\nexport { TranslazeFeatureConfig } from './lib/models/config/translaze-feature-config.model';\nexport { TranslazeLocalStorage } from './lib/models/translaze-local-storage.model';\nexport { TranslazeOnText } from './lib/models/translaze-on-text.model';\nexport { translaze } from './lib/translaze.const';\nexport { TranslazeService } from './lib/services/translaze.service';\nexport { TranslazeFeatureService } from './lib/services/translaze-feature.service';\nexport { TranslazeRootModule } from './lib/translaze-root.module';\nexport { TranslazeFeatureModule } from './lib/translaze-feature.module';\nexport { TRANSLAZE_FEATURE_CONFIG } from './lib/tokens/translaze-feature-config.token';\nexport { TranslazeInfo } from './lib/models/info/translaze-info.model';\nexport { TranslazeLang } from './lib/models/translaze-lang.model';\nexport { TranslazeLangStatus } from './lib/enums/translaze-lang-status.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseTranslazeService as ɵa} from './lib/services/base-translaze.service';\nexport {TRANSLAZE_CONFIG as ɵb} from './lib/tokens/translaze-config.token';"],"names":[],"mappings":"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"}